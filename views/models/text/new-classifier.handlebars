{{> header }}

<div class="container mt-5">
  <div class="row mb-4">
    <div class="col-12">
      <h1>Create Text Classifier</h1>
      <p class="lead">Train a custom text classifier by adding examples for each category.</p>
    </div>
  </div>

  <div class="row">
    <div class="col-lg-8">
      <div class="card shadow mb-4">
        <div class="card-header bg-primary text-white">
          <h2 class="h5 mb-0">New Text Classifier</h2>
        </div>
        <div class="card-body">
          <form id="create-classifier-form">
            <div class="form-group">
              <label for="classifier-name">Classifier Name</label>
              <input type="text" class="form-control" id="classifier-name" placeholder="E.g., sentiment, topic, language">
              <small class="form-text text-muted">Give your classifier a descriptive name (no spaces)</small>
            </div>

            <div class="mt-4 mb-3">
              <div class="d-flex justify-content-between align-items-center">
                <h3 class="h5">Categories</h3>
                <button type="button" class="btn btn-sm btn-outline-primary" id="add-category-btn">
                  <i class="fas fa-plus"></i> Add Category
                </button>
              </div>
              <small class="form-text text-muted mb-3">Add at least two categories and provide example text for each</small>
            </div>

            <div id="categories-container">
              <!-- Categories will be added here dynamically -->
            </div>

            <div class="mt-4">
              <button type="submit" class="btn btn-lg btn-primary" id="train-btn">
                <i class="fas fa-cogs"></i> Train Classifier
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <div class="col-lg-4">
      <div class="card shadow mb-4">
        <div class="card-header bg-light">
          <h3 class="h5 mb-0">Tips for Better Results</h3>
        </div>
        <div class="card-body">
          <ul class="list-group list-group-flush">
            <li class="list-group-item">Add at least 5-10 examples per category</li>
            <li class="list-group-item">Use real-world examples similar to what you'll classify</li>
            <li class="list-group-item">Include variety in your examples</li>
            <li class="list-group-item">Balance the number of examples across categories</li>
          </ul>
        </div>
      </div>

      <div class="card shadow">
        <div class="card-header bg-light">
          <h3 class="h5 mb-0">What's Next?</h3>
        </div>
        <div class="card-body">
          <p>After training, you can:</p>
          <ul>
            <li>Test your classifier with new text</li>
            <li>View confidence scores for each category</li>
            <li>Use the classifier in your projects</li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Category Template -->
<template id="category-template">
  <div class="category-section card mb-3">
    <div class="card-header bg-light d-flex justify-content-between align-items-center">
      <h4 class="category-name h6 mb-0"></h4>
      <button type="button" class="btn btn-sm btn-outline-danger remove-category-btn">
        <i class="fas fa-times"></i>
      </button>
    </div>
    <div class="card-body">
      <div class="examples-container">
        <div class="example-row input-group mb-2">
          <input type="text" class="form-control example-input" placeholder="Add example text...">
          <div class="input-group-append">
            <button class="btn btn-outline-secondary add-example-btn" type="button">
              <i class="fas fa-plus"></i>
            </button>
          </div>
        </div>
      </div>
      <button type="button" class="btn btn-sm btn-outline-secondary mt-2 add-example-btn-alt">
        <i class="fas fa-plus"></i> Add Another Example
      </button>
    </div>
  </div>
</template>

<script>
  $(document).ready(function() {
    // Add category functionality
    $('#add-category-btn').click(function() {
      const categoryName = prompt('Enter category name (e.g., positive, negative, sports, news):');
      if (categoryName && categoryName.trim() !== '') {
        addCategory(categoryName.trim());
      }
    });

    // Handle form submission
    $('#create-classifier-form').submit(function(e) {
      e.preventDefault();
      trainClassifier();
    });

    // Function to add new category
    function addCategory(categoryName) {
      const template = document.getElementById('category-template');
      const clone = document.importNode(template.content, true);
      
      // Set category name
      clone.querySelector('.category-name').textContent = categoryName;
      
      // Add data attribute for category identification
      const categorySection = clone.querySelector('.category-section');
      categorySection.dataset.category = categoryName;
      
      // Add event listener for removing category
      clone.querySelector('.remove-category-btn').addEventListener('click', function() {
        if (confirm(`Remove category "${categoryName}" and all its examples?`)) {
          $(this).closest('.category-section').remove();
        }
      });
      
      // Add event listeners for adding examples
      clone.querySelector('.add-example-btn').addEventListener('click', function() {
        addExampleRow($(this).closest('.examples-container'));
      });
      
      clone.querySelector('.add-example-btn-alt').addEventListener('click', function() {
        addExampleRow($(this).closest('.card-body').find('.examples-container'));
      });
      
      // Add event for example input keypress (Enter)
      clone.querySelector('.example-input').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          e.preventDefault();
          const container = $(this).closest('.examples-container');
          addExampleRow(container);
        }
      });
      
      // Append the new category to the container
      document.getElementById('categories-container').appendChild(categorySection);
    }

    // Function to add new example row
    function addExampleRow(container) {
      const input = container.find('.example-input:last');
      const text = input.val().trim();
      
      if (text) {
        // Clear the last input
        input.val('');
      }
      
      // Create new row
      const newRow = $(`
        <div class="example-row input-group mb-2">
          <input type="text" class="form-control example-input" placeholder="Add example text...">
          <div class="input-group-append">
            <button class="btn btn-outline-secondary add-example-btn" type="button">
              <i class="fas fa-plus"></i>
            </button>
            <button class="btn btn-outline-danger remove-example-btn" type="button">
              <i class="fas fa-times"></i>
            </button>
          </div>
        </div>
      `);
      
      // If there was text in the previous input, set it in the newly created row
      if (text) {
        newRow.find('.example-input').val(text);
      }
      
      // Add event listeners
      newRow.find('.add-example-btn').click(function() {
        addExampleRow(container);
      });
      
      newRow.find('.remove-example-btn').click(function() {
        $(this).closest('.example-row').remove();
      });
      
      newRow.find('.example-input').keypress(function(e) {
        if (e.key === 'Enter') {
          e.preventDefault();
          addExampleRow(container);
        }
      });
      
      // Append new row to container
      container.append(newRow);
      
      // Focus on the new input
      newRow.find('.example-input').focus();
    }

    // Function to train classifier
    function trainClassifier() {
      const classifierName = $('#classifier-name').val().trim();
      
      if (!classifierName) {
        alert('Please enter a classifier name');
        $('#classifier-name').focus();
        return;
      }
      
      const categories = $('.category-section');
      if (categories.length < 2) {
        alert('Please add at least two categories');
        return;
      }
      
      // Collect training data
      const trainingData = {};
      let isValid = true;
      
      categories.each(function() {
        const category = $(this).data('category');
        const examples = [];
        
        $(this).find('.example-input').each(function() {
          const text = $(this).val().trim();
          if (text) {
            examples.push(text);
          }
        });
        
        if (examples.length === 0) {
          alert(`Category "${category}" has no examples. Please add at least one example.`);
          isValid = false;
          return false; // Break the loop
        }
        
        trainingData[category] = examples;
      });
      
      if (!isValid) return;
      
      // Show loading state
      $('#train-btn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Training...');
      
      // Send to server
      $.ajax({
        url: `/classify/text/${classifierName}/train`,
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ training_data: trainingData }),
        success: function(response) {
          alert('Classifier created successfully!');
          window.location.href = '/models/text/text_classifiers';
        },
        error: function(xhr) {
          let errorMessage = 'Failed to create classifier';
          try {
            const response = JSON.parse(xhr.responseText);
            if (response.error) {
              errorMessage = response.error;
              if (response.details) {
                errorMessage += ': ' + response.details;
              }
            }
          } catch (e) {}
          
          alert(errorMessage);
          $('#train-btn').prop('disabled', false).html('<i class="fas fa-cogs"></i> Train Classifier');
        }
      });
    }

    // Add initial categories
    addCategory('positive');
    addCategory('negative');
  });
</script>

{{> footer }}
